/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package t3;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Proyector
 */
public class FrameRegistro extends javax.swing.JFrame {
    
    DefaultListModel modelo = new DefaultListModel();
     List<Polo> polos = new ArrayList<Polo>();
     List<Chompa> chompas = new ArrayList<Chompa>();
     List<Pantalon> pantalones = new ArrayList<Pantalon>();
     DefaultListModel modeloLista = new DefaultListModel();

    /**
     * Creates new form FrameRegistro
     */
    public FrameRegistro() {
        initComponents();
         lstElectro.setModel(modeloLista);
    }

      private void llamarPantallaPolo(){
    
    FramePolo polos = new FramePolo(this);
    polos.setLocationRelativeTo(null);
    polos.setVisible(true);
    this.setVisible(false);
    
    }
    
    private void llamarPantallaPolo(Polo polos){
    
    FramePolo PantallaPolo = new FramePolo(this,polos );
    PantallaPolo.setLocationRelativeTo(null);
    PantallaPolo.setVisible(true);
    this.setVisible(false);
    
    }
    
    
     public void agregarPolo(Polo polo){//va a recibir un estudiante
         /*A mi lista de estudiante (le agrego el estudiante)
         una vez que lo agregue a mi modelo , falta agregarlo al list view*/
        polos.add(polo);
        modelo.addElement(polo.getTexto());//Get texto me devuelve el apellido y nombre
        lstElectro.setModel(modelo);
     }
    
     public void actualizarPolo(Polo polo) {
    // Encuentra el índice del estudiante en la lista y actualiza su información.
    int index = polos.indexOf(polo);
    if (index != -1) {
        polos.set(index, polo);
        modelo.set(index, polo.getTexto());
    }
    }
     
      /*Chompa*/
    
   private void llamarPantallaChompa(){
    
    FrameChompa chompas = new FrameChompa(this);
    chompas.setLocationRelativeTo(null);
    chompas.setVisible(true);
    this.setVisible(false);
    
    }
   
   private void llamarPantallaChompa(Chompa chompas){
    
    FrameChompa PantallaChompa = new FrameChompa(this,chompas);
    PantallaChompa.setLocationRelativeTo(null);
    PantallaChompa.setVisible(true);
    this.setVisible(false);
    
    }
    
      public void agregarChompa(Chompa chompa){//va a recibir un estudiante
         /*A mi lista de estudiante (le agrego el estudiante)
         una vez que lo agregue a mi modelo , falta agregarlo al list view*/
        chompas.add(chompa);
        modelo.addElement(chompa.getTexto());//Get texto me devuelve el apellido y nombre
        lstElectro.setModel(modelo);
     }
    
     public void actualizarChompa(Chompa chompa) {
    // Encuentra el índice del estudiante en la lista y actualiza su información.
    int index = chompas.indexOf(chompa);
    if (index != -1) {
        chompas.set(index, chompa);
        modelo.set(index, chompa.getTexto());
    }
    }
     
     
     
     /*PANTALONES*/
     
     
     private void llamarPantallaPantalon(){
    
    FramePantalon pantalones = new FramePantalon(this);
    pantalones.setLocationRelativeTo(null);
    pantalones.setVisible(true);
    this.setVisible(false);
    
    }
    
    private void llamarPantallaPantalon(Pantalon pantalones){
    
    FramePantalon PantallaPantalon = new FramePantalon(this,pantalones );
    PantallaPantalon.setLocationRelativeTo(null);
    PantallaPantalon.setVisible(true);
    this.setVisible(false);
    
    }
 
    public void agregarPantalon(Pantalon pantalon){//va a recibir un estudiante
         /*A mi lista de estudiante (le agrego el estudiante)
         una vez que lo agregue a mi modelo , falta agregarlo al list view*/
        pantalones.add(pantalon);
        modelo.addElement(pantalon.getTexto());//Get texto me devuelve el apellido y nombre
       lstElectro.setModel(modelo);
     }
    
     public void actualizarPantalon(Pantalon pantalon) {
    // Encuentra el índice del estudiante en la lista y actualiza su información.
    int index = pantalones.indexOf(pantalon);
    if (index != -1) {
        pantalones.set(index, pantalon);
        modelo.set(index, pantalon.getTexto());
    
    }
     }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_buscar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstElectro = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(97, 23, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jButton1.setBackground(new java.awt.Color(97, 23, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Agregar Pantalon");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lstElectro);

        jButton2.setBackground(new java.awt.Color(97, 23, 255));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Buscar");
        jButton2.setBorder(null);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(97, 23, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Agregar Polo");
        jButton3.setBorder(null);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(97, 23, 255));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Agregar Chompa");
        jButton4.setBorder(null);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                    .addComponent(txt_buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(9, 9, 9)))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
                llamarPantallaPolo();

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
                llamarPantallaChompa();

    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
                llamarPantallaPantalon();

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        
         String criterioBusqueda = txt_buscar.getText().toLowerCase(); // Obtén el criterio de búsqueda en minúsculas
    
    DefaultListModel nuevoModelo = new DefaultListModel(); // Crea un nuevo modelo de lista
    
    for (Polo polo : polos) {
        // Convierte el nombre y apellido del estudiante a minúsculas para que la búsqueda no sea sensible a mayúsculas/minúsculas
        String nombreCompleto = polo.getColor().toLowerCase() + " " + polo.getPrecio().toLowerCase();
        
        // Compara el nombre completo del estudiante con el criterio de búsqueda
        if (nombreCompleto.contains(criterioBusqueda)) {
            // Si coincide, agrega el estudiante al nuevo modelo de lista
            nuevoModelo.addElement(polo.getTexto());
        }
    }
    
        for (Chompa chompa : chompas) {
        // Convierte el nombre y apellido del estudiante a minúsculas para que la búsqueda no sea sensible a mayúsculas/minúsculas
        String nombreCompleto = chompa.getModelo().toLowerCase() + " " + chompa.getPrecio().toLowerCase();
        
        // Compara el nombre completo del estudiante con el criterio de búsqueda
        if (nombreCompleto.contains(criterioBusqueda)) {
            // Si coincide, agrega el estudiante al nuevo modelo de lista
            nuevoModelo.addElement(chompa.getTexto());
        }
        }
        
         for (Pantalon pantalon : pantalones) {
        // Convierte el nombre y apellido del estudiante a minúsculas para que la búsqueda no sea sensible a mayúsculas/minúsculas
        String nombreCompleto = pantalon.getDiseño().toLowerCase() + " " + pantalon.getPrecio().toLowerCase();
        
        // Compara el nombre completo del estudiante con el criterio de búsqueda
        if (nombreCompleto.contains(criterioBusqueda)) {
            // Si coincide, agrega el estudiante al nuevo modelo de lista
            nuevoModelo.addElement(pantalon.getTexto());
        }
    }
           // Actualiza el JList con el nuevo modelo de lista que contiene los resultados de la búsqueda
    lstElectro.setModel(nuevoModelo);
        
        
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameRegistro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstElectro;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
